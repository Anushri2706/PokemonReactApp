name: My CodeQL scanner
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths-ignore:
      - ".github/dependabot.yml"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/PULL_REQUEST_TEMPLATE.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
      
      - name: Get changed directories
        id: changed
        run: |
          echo "Base ref: ${{ github.base_ref }}"
          echo "Head ref: ${{ github.head_ref }}"
          echo "Changed files:"
          git diff --name-only ${{ github.base_ref }}...${{ github.head_ref }}
          echo "Directories with changes:"
          changed_dirs=$(git diff --name-only ${{ github.base_ref }}...${{ github.head_ref }} | grep '/' | cut -d'/' -f1 | sort -u | tr '\n' ' ')
          echo "Found directories: '${changed_dirs}'"
          echo "dirs=${changed_dirs}" >> $GITHUB_OUTPUT
          echo "has_changes=$([ -n '${changed_dirs}' ] && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT

      - name: Debug changed directories output
        run: |
          echo "Directories to analyze: '${{ steps.changed.outputs.dirs }}'"
          echo "Has changes: '${{ steps.changed.outputs.has_changes }}'"

      - name: Run CodeQL only on changed directories
        if: steps.changed.outputs.has_changes == 'true'
        run: |
          for dir in ${{ steps.changed.outputs.dirs }}; do
            echo "Analyzing directory: $dir"
            codeql database create db-$dir --language=${{ matrix.language }} --source-root=$dir
            codeql database analyze db-$dir --format=sarif-latest --output=results-$dir.sarif
          done

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          output: ./codeql-results

      - name: Upload SARIF results
        uses: actions/upload-artifact@v4
        with:
          name: codeql-sarif
          path: codeql-results/**/*.sarif

  create_issues:
    name: Create issues from CodeQL Alerts
    runs-on: ubuntu-latest
    needs: analyze
    permissions:
      contents: read
      security-events: read
      issues: write
    steps:
      - name: Create issues from Code Scanning alerts
        uses: actions/github-script@v7
        with:
          script: |
            const alerts = await github.paginate(
              github.rest.codeScanning.listAlertsForRepo,
              {
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: "open",
                per_page: 100
              }
            );

            for (const alert of alerts) {
              const severity = alert.rule?.security_severity_level || "unknown";
              if (!["high", "critical"].includes(severity.toLowerCase())) continue;

              const ruleId = alert.rule?.id || "unknown-rule";
              const message = alert.most_recent_instance?.message?.text || "";
              const file = alert.most_recent_instance?.location?.path || "unknown file";

              const issueTitle = `CodeQL: [${severity.toUpperCase()}] ${ruleId}`;

              const { data: existingIssues } = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: "open",
                labels: "auto-generated",
                per_page: 100
              });

              const duplicate = existingIssues.find(
                issue => issue.title === issueTitle
              );

              if (!duplicate) {
                const issueBody = `
                **${severity.toUpperCase()} CodeQL finding**
                **Rule:** ${ruleId}  
                **Message:** ${message}  
                **File:** ${file}  

                This issue was auto-created and assigned to **GitHub Copilot Autofix**.
                `;

                await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: issueTitle,
                  body: issueBody,
                  assignees: ["Anushri2706"],
                  labels: ["auto-generated", severity.toLowerCase()]
                });
              }
            }
